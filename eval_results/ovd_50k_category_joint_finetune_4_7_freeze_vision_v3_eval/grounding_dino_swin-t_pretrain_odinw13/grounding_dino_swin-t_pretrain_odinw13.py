_data_root = 'data/odinw/VehiclesOpenImages/416x416/'
auto_scale_lr = dict(base_batch_size=64, enable=False)
backend_args = None
base_test_pipeline = [
    dict(
        backend_args=None, imdecode_backend='pillow',
        type='LoadImageFromFile'),
    dict(
        backend='pillow',
        keep_ratio=True,
        scale=(
            800,
            1333,
        ),
        type='FixScaleResize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'text',
            'custom_entities',
            'caption_prompt',
        ),
        type='PackDetInputs'),
]
caption_prompt = dict(
    pothole=dict(
        name='holes', prefix='there are some ', suffix=' on the road'))
class_name = (
    'Ambulance',
    'Bus',
    'Car',
    'Motorcycle',
    'Truck',
)
coco_od_dataset = dict(
    ann_file='o365v1_train_odvg.json',
    backend_args=None,
    data_prefix=dict(img='train/'),
    data_root='data/objects365v1/',
    filter_cfg=dict(filter_empty_gt=False),
    label_map_file='o365v1_label_map.json',
    pipeline=[
        dict(backend_args=None, type='LoadImageFromFile'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(prob=0.5, type='RandomFlip'),
        dict(
            transforms=[
                [
                    dict(
                        keep_ratio=True,
                        scales=[
                            (
                                480,
                                1333,
                            ),
                            (
                                512,
                                1333,
                            ),
                            (
                                544,
                                1333,
                            ),
                            (
                                576,
                                1333,
                            ),
                            (
                                608,
                                1333,
                            ),
                            (
                                640,
                                1333,
                            ),
                            (
                                672,
                                1333,
                            ),
                            (
                                704,
                                1333,
                            ),
                            (
                                736,
                                1333,
                            ),
                            (
                                768,
                                1333,
                            ),
                            (
                                800,
                                1333,
                            ),
                        ],
                        type='RandomChoiceResize'),
                ],
                [
                    dict(
                        keep_ratio=True,
                        scales=[
                            (
                                400,
                                4200,
                            ),
                            (
                                500,
                                4200,
                            ),
                            (
                                600,
                                4200,
                            ),
                        ],
                        type='RandomChoiceResize'),
                    dict(
                        allow_negative_crop=True,
                        crop_size=(
                            384,
                            600,
                        ),
                        crop_type='absolute_range',
                        type='RandomCrop'),
                    dict(
                        keep_ratio=True,
                        scales=[
                            (
                                480,
                                1333,
                            ),
                            (
                                512,
                                1333,
                            ),
                            (
                                544,
                                1333,
                            ),
                            (
                                576,
                                1333,
                            ),
                            (
                                608,
                                1333,
                            ),
                            (
                                640,
                                1333,
                            ),
                            (
                                672,
                                1333,
                            ),
                            (
                                704,
                                1333,
                            ),
                            (
                                736,
                                1333,
                            ),
                            (
                                768,
                                1333,
                            ),
                            (
                                800,
                                1333,
                            ),
                        ],
                        type='RandomChoiceResize'),
                ],
            ],
            type='RandomChoice'),
        dict(min_gt_bbox_wh=(
            0.01,
            0.01,
        ), type='FilterAnnotations'),
        dict(
            max_tokens=256,
            num_sample_negative=85,
            tokenizer_name='bert-base-uncased',
            type='RandomSamplingNegPos'),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'flip',
                'flip_direction',
                'text',
                'custom_entities',
                'tokens_positive',
                'dataset_mode',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    type='ODVGDataset')
data_root = 'data/odinw/'
dataset_AerialMaritimeDrone = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/AerialMaritimeDrone/large/',
    metainfo=dict(classes=(
        'boat',
        'car',
        'dock',
        'jetski',
        'lift',
    )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_Aquarium = dict(
    ann_file='valid/annotations_without_background.json',
    caption_prompt=None,
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/',
    metainfo=dict(
        classes=(
            'fish',
            'jellyfish',
            'penguin',
            'puffin',
            'shark',
            'starfish',
            'stingray',
        )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_CottontailRabbits = dict(
    ann_file='valid/annotations_without_background.json',
    caption_prompt=dict({'Cottontail-Rabbit': dict(name='rabbit')}),
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/CottontailRabbits/',
    metainfo=dict(classes=('Cottontail-Rabbit', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_EgoHands = dict(
    ann_file='valid/annotations_without_background.json',
    caption_prompt=dict(hand=dict(suffix=' of a person')),
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/EgoHands/generic/',
    metainfo=dict(classes=('hand', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_NorthAmericaMushrooms = dict(
    ann_file='valid/annotations_without_background.json',
    caption_prompt=dict(
        CoW=dict(name='flat mushroom'),
        chanterelle=dict(name='yellow mushroom')),
    data_prefix=dict(img='valid/'),
    data_root=
    'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/',
    metainfo=dict(classes=(
        'CoW',
        'chanterelle',
    )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_Packages = dict(
    ann_file='valid/annotations_without_background.json',
    caption_prompt=dict(
        package=dict(prefix='there is a ', suffix=' on the porch')),
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/Packages/Raw/',
    metainfo=dict(classes=('package', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_PascalVOC = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/PascalVOC/',
    metainfo=dict(
        classes=(
            'aeroplane',
            'bicycle',
            'bird',
            'boat',
            'bottle',
            'bus',
            'car',
            'cat',
            'chair',
            'cow',
            'diningtable',
            'dog',
            'horse',
            'motorbike',
            'person',
            'pottedplant',
            'sheep',
            'sofa',
            'train',
            'tvmonitor',
        )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_Raccoon = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/Raccoon/Raccoon.v2-raw.coco/',
    metainfo=dict(classes=('raccoon', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_ShellfishOpenImages = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/ShellfishOpenImages/raw/',
    metainfo=dict(classes=(
        'Crab',
        'Lobster',
        'Shrimp',
    )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_VehiclesOpenImages = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/VehiclesOpenImages/416x416/',
    metainfo=dict(
        classes=(
            'Ambulance',
            'Bus',
            'Car',
            'Motorcycle',
            'Truck',
        )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_pistols = dict(
    ann_file='val_annotations_without_background.json',
    data_prefix=dict(img=''),
    data_root='data/odinw/pistols/export/',
    metainfo=dict(classes=('pistol', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_pothole = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/pothole/',
    metainfo=dict(classes=('pothole', )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_prefixes = [
    'AerialMaritimeDrone',
    'Aquarium',
    'CottontailRabbits',
    'EgoHands',
    'NorthAmericaMushrooms',
    'Packages',
    'PascalVOC',
    'pistols',
    'pothole',
    'Raccoon',
    'ShellfishOpenImages',
    'thermalDogsAndPeople',
    'VehiclesOpenImages',
]
dataset_thermalDogsAndPeople = dict(
    ann_file='valid/annotations_without_background.json',
    data_prefix=dict(img='valid/'),
    data_root='data/odinw/thermalDogsAndPeople/',
    metainfo=dict(classes=(
        'dog',
        'person',
    )),
    pipeline=[
        dict(
            backend_args=None,
            imdecode_backend='pillow',
            type='LoadImageFromFile'),
        dict(
            backend='pillow',
            keep_ratio=True,
            scale=(
                800,
                1333,
            ),
            type='FixScaleResize'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            meta_keys=(
                'img_id',
                'img_path',
                'ori_shape',
                'img_shape',
                'scale_factor',
                'text',
                'custom_entities',
                'caption_prompt',
            ),
            type='PackDetInputs'),
    ],
    return_classes=True,
    test_mode=True,
    type='CocoDataset')
dataset_type = 'CocoDataset'
datasets = [
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/AerialMaritimeDrone/large/',
        metainfo=dict(classes=(
            'boat',
            'car',
            'dock',
            'jetski',
            'lift',
        )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        caption_prompt=None,
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/',
        metainfo=dict(
            classes=(
                'fish',
                'jellyfish',
                'penguin',
                'puffin',
                'shark',
                'starfish',
                'stingray',
            )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        caption_prompt=dict({'Cottontail-Rabbit': dict(name='rabbit')}),
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/CottontailRabbits/',
        metainfo=dict(classes=('Cottontail-Rabbit', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        caption_prompt=dict(hand=dict(suffix=' of a person')),
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/EgoHands/generic/',
        metainfo=dict(classes=('hand', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        caption_prompt=dict(
            CoW=dict(name='flat mushroom'),
            chanterelle=dict(name='yellow mushroom')),
        data_prefix=dict(img='valid/'),
        data_root=
        'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/',
        metainfo=dict(classes=(
            'CoW',
            'chanterelle',
        )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        caption_prompt=dict(
            package=dict(prefix='there is a ', suffix=' on the porch')),
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/Packages/Raw/',
        metainfo=dict(classes=('package', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/PascalVOC/',
        metainfo=dict(
            classes=(
                'aeroplane',
                'bicycle',
                'bird',
                'boat',
                'bottle',
                'bus',
                'car',
                'cat',
                'chair',
                'cow',
                'diningtable',
                'dog',
                'horse',
                'motorbike',
                'person',
                'pottedplant',
                'sheep',
                'sofa',
                'train',
                'tvmonitor',
            )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='val_annotations_without_background.json',
        data_prefix=dict(img=''),
        data_root='data/odinw/pistols/export/',
        metainfo=dict(classes=('pistol', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/pothole/',
        metainfo=dict(classes=('pothole', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/Raccoon/Raccoon.v2-raw.coco/',
        metainfo=dict(classes=('raccoon', )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/ShellfishOpenImages/raw/',
        metainfo=dict(classes=(
            'Crab',
            'Lobster',
            'Shrimp',
        )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/thermalDogsAndPeople/',
        metainfo=dict(classes=(
            'dog',
            'person',
        )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
    dict(
        ann_file='valid/annotations_without_background.json',
        data_prefix=dict(img='valid/'),
        data_root='data/odinw/VehiclesOpenImages/416x416/',
        metainfo=dict(
            classes=(
                'Ambulance',
                'Bus',
                'Car',
                'Motorcycle',
                'Truck',
            )),
        pipeline=[
            dict(
                backend_args=None,
                imdecode_backend='pillow',
                type='LoadImageFromFile'),
            dict(
                backend='pillow',
                keep_ratio=True,
                scale=(
                    800,
                    1333,
                ),
                type='FixScaleResize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'text',
                    'custom_entities',
                    'caption_prompt',
                ),
                type='PackDetInputs'),
        ],
        return_classes=True,
        test_mode=True,
        type='CocoDataset'),
]
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='GroundingVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
lang_model_name = 'bert-base-uncased'
launcher = 'pytorch'
load_from = '/input_oe_data/jieyuz/weikaih/code/mmdetection/model_weights/ovd_50k_category_joint_finetune_4_7_freeze_vision_v3.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 30
metainfo = dict(classes=(
    'Ambulance',
    'Bus',
    'Car',
    'Motorcycle',
    'Truck',
))
metrics = [
    dict(
        ann_file=
        'data/odinw/AerialMaritimeDrone/large/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/CottontailRabbits/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/EgoHands/generic/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/Packages/Raw/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/PascalVOC/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/pistols/export/val_annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file='data/odinw/pothole/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/Raccoon/Raccoon.v2-raw.coco/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/ShellfishOpenImages/raw/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/thermalDogsAndPeople/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
    dict(
        ann_file=
        'data/odinw/VehiclesOpenImages/416x416/valid/annotations_without_background.json',
        metric='bbox',
        type='CocoMetric'),
]
model = dict(
    as_two_stage=True,
    backbone=dict(
        attn_drop_rate=0.0,
        convert_weights=True,
        depths=[
            2,
            2,
            6,
            2,
        ],
        drop_path_rate=0.2,
        drop_rate=0.0,
        embed_dims=96,
        frozen_stages=-1,
        init_cfg=dict(
            checkpoint=
            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth',
            type='Pretrained'),
        mlp_ratio=4,
        num_heads=[
            3,
            6,
            12,
            24,
        ],
        out_indices=(
            1,
            2,
            3,
        ),
        patch_norm=True,
        qk_scale=None,
        qkv_bias=True,
        type='SwinTransformer',
        window_size=7,
        with_cp=True),
    bbox_head=dict(
        contrastive_cfg=dict(bias=True, log_scale='auto', max_text_len=256),
        loss_bbox=dict(loss_weight=5.0, type='L1Loss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        num_classes=256,
        sync_cls_avg_factor=True,
        type='GroundingDINOHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_mask=False,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    decoder=dict(
        layer_cfg=dict(
            cross_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8),
            cross_attn_text_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8),
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=2048, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=8)),
        num_layers=6,
        post_norm_cfg=None,
        return_intermediate=True),
    dn_cfg=dict(
        box_noise_scale=1.0,
        group_cfg=dict(dynamic=True, num_dn_queries=100, num_groups=None),
        label_noise_scale=0.5),
    encoder=dict(
        fusion_layer_cfg=dict(
            embed_dim=1024,
            init_values=0.0001,
            l_dim=256,
            num_heads=4,
            v_dim=256),
        layer_cfg=dict(
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=2048, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_levels=4)),
        num_cp=6,
        num_layers=6,
        text_layer_cfg=dict(
            ffn_cfg=dict(
                embed_dims=256, feedforward_channels=1024, ffn_drop=0.0),
            self_attn_cfg=dict(dropout=0.0, embed_dims=256, num_heads=4))),
    language_model=dict(
        add_pooling_layer=False,
        max_tokens=256,
        name='bert-base-uncased',
        pad_to_max=False,
        special_tokens_list=[
            '[CLS]',
            '[SEP]',
            '.',
            '?',
        ],
        type='BertModel',
        use_sub_sentence_represent=True),
    neck=dict(
        act_cfg=None,
        bias=True,
        in_channels=[
            192,
            384,
            768,
        ],
        kernel_size=1,
        norm_cfg=dict(num_groups=32, type='GN'),
        num_outs=4,
        out_channels=256,
        type='ChannelMapper'),
    num_queries=900,
    positional_encoding=dict(
        normalize=True, num_feats=128, offset=0.0, temperature=20),
    test_cfg=dict(max_per_img=300),
    train_cfg=dict(
        assigner=dict(
            match_costs=[
                dict(type='BinaryFocalLossCost', weight=2.0),
                dict(box_format='xywh', type='BBoxL1Cost', weight=5.0),
                dict(iou_mode='giou', type='IoUCost', weight=2.0),
            ],
            type='HungarianAssigner')),
    type='GroundingDINO',
    with_box_refine=True)
optim_wrapper = dict(
    clip_grad=dict(max_norm=0.1, norm_type=2),
    optimizer=dict(lr=0.0004, type='AdamW', weight_decay=0.0001),
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            backbone=dict(lr_mult=0.1),
            language_model=dict(lr_mult=0.1))),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=1000, start_factor=0.1, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=30,
        gamma=0.1,
        milestones=[
            19,
            26,
        ],
        type='MultiStepLR'),
]
pretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        datasets=[
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/AerialMaritimeDrone/large/',
                metainfo=dict(
                    classes=(
                        'boat',
                        'car',
                        'dock',
                        'jetski',
                        'lift',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=None,
                data_prefix=dict(img='valid/'),
                data_root=
                'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/',
                metainfo=dict(
                    classes=(
                        'fish',
                        'jellyfish',
                        'penguin',
                        'puffin',
                        'shark',
                        'starfish',
                        'stingray',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict({'Cottontail-Rabbit':
                                     dict(name='rabbit')}),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/CottontailRabbits/',
                metainfo=dict(classes=('Cottontail-Rabbit', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(hand=dict(suffix=' of a person')),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/EgoHands/generic/',
                metainfo=dict(classes=('hand', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(
                    CoW=dict(name='flat mushroom'),
                    chanterelle=dict(name='yellow mushroom')),
                data_prefix=dict(img='valid/'),
                data_root=
                'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/',
                metainfo=dict(classes=(
                    'CoW',
                    'chanterelle',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(
                    package=dict(prefix='there is a ',
                                 suffix=' on the porch')),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/Packages/Raw/',
                metainfo=dict(classes=('package', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/PascalVOC/',
                metainfo=dict(
                    classes=(
                        'aeroplane',
                        'bicycle',
                        'bird',
                        'boat',
                        'bottle',
                        'bus',
                        'car',
                        'cat',
                        'chair',
                        'cow',
                        'diningtable',
                        'dog',
                        'horse',
                        'motorbike',
                        'person',
                        'pottedplant',
                        'sheep',
                        'sofa',
                        'train',
                        'tvmonitor',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='val_annotations_without_background.json',
                data_prefix=dict(img=''),
                data_root='data/odinw/pistols/export/',
                metainfo=dict(classes=('pistol', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/pothole/',
                metainfo=dict(classes=('pothole', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/Raccoon/Raccoon.v2-raw.coco/',
                metainfo=dict(classes=('raccoon', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/ShellfishOpenImages/raw/',
                metainfo=dict(classes=(
                    'Crab',
                    'Lobster',
                    'Shrimp',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/thermalDogsAndPeople/',
                metainfo=dict(classes=(
                    'dog',
                    'person',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/VehiclesOpenImages/416x416/',
                metainfo=dict(
                    classes=(
                        'Ambulance',
                        'Bus',
                        'Car',
                        'Motorcycle',
                        'Truck',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
        ],
        type='ConcatDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    dataset_prefixes=[
        'AerialMaritimeDrone',
        'Aquarium',
        'CottontailRabbits',
        'EgoHands',
        'NorthAmericaMushrooms',
        'Packages',
        'PascalVOC',
        'pistols',
        'pothole',
        'Raccoon',
        'ShellfishOpenImages',
        'thermalDogsAndPeople',
        'VehiclesOpenImages',
    ],
    metrics=[
        dict(
            ann_file=
            'data/odinw/AerialMaritimeDrone/large/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/CottontailRabbits/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/EgoHands/generic/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Packages/Raw/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/PascalVOC/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/pistols/export/val_annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/pothole/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Raccoon/Raccoon.v2-raw.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/ShellfishOpenImages/raw/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/thermalDogsAndPeople/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/VehiclesOpenImages/416x416/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
    ],
    type='MultiDatasetsEvaluator')
test_pipeline = [
    dict(
        backend_args=None, imdecode_backend='pillow',
        type='LoadImageFromFile'),
    dict(
        backend='pillow',
        keep_ratio=True,
        scale=(
            800,
            1333,
        ),
        type='FixScaleResize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'text',
            'custom_entities',
            'caption_prompt',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=30, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=4,
    dataset=dict(
        datasets=[
            dict(
                ann_file='o365v1_train_odvg.json',
                backend_args=None,
                data_prefix=dict(img='train/'),
                data_root='data/objects365v1/',
                filter_cfg=dict(filter_empty_gt=False),
                label_map_file='o365v1_label_map.json',
                pipeline=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(prob=0.5, type='RandomFlip'),
                    dict(
                        transforms=[
                            [
                                dict(
                                    keep_ratio=True,
                                    scales=[
                                        (
                                            480,
                                            1333,
                                        ),
                                        (
                                            512,
                                            1333,
                                        ),
                                        (
                                            544,
                                            1333,
                                        ),
                                        (
                                            576,
                                            1333,
                                        ),
                                        (
                                            608,
                                            1333,
                                        ),
                                        (
                                            640,
                                            1333,
                                        ),
                                        (
                                            672,
                                            1333,
                                        ),
                                        (
                                            704,
                                            1333,
                                        ),
                                        (
                                            736,
                                            1333,
                                        ),
                                        (
                                            768,
                                            1333,
                                        ),
                                        (
                                            800,
                                            1333,
                                        ),
                                    ],
                                    type='RandomChoiceResize'),
                            ],
                            [
                                dict(
                                    keep_ratio=True,
                                    scales=[
                                        (
                                            400,
                                            4200,
                                        ),
                                        (
                                            500,
                                            4200,
                                        ),
                                        (
                                            600,
                                            4200,
                                        ),
                                    ],
                                    type='RandomChoiceResize'),
                                dict(
                                    allow_negative_crop=True,
                                    crop_size=(
                                        384,
                                        600,
                                    ),
                                    crop_type='absolute_range',
                                    type='RandomCrop'),
                                dict(
                                    keep_ratio=True,
                                    scales=[
                                        (
                                            480,
                                            1333,
                                        ),
                                        (
                                            512,
                                            1333,
                                        ),
                                        (
                                            544,
                                            1333,
                                        ),
                                        (
                                            576,
                                            1333,
                                        ),
                                        (
                                            608,
                                            1333,
                                        ),
                                        (
                                            640,
                                            1333,
                                        ),
                                        (
                                            672,
                                            1333,
                                        ),
                                        (
                                            704,
                                            1333,
                                        ),
                                        (
                                            736,
                                            1333,
                                        ),
                                        (
                                            768,
                                            1333,
                                        ),
                                        (
                                            800,
                                            1333,
                                        ),
                                    ],
                                    type='RandomChoiceResize'),
                            ],
                        ],
                        type='RandomChoice'),
                    dict(
                        min_gt_bbox_wh=(
                            0.01,
                            0.01,
                        ),
                        type='FilterAnnotations'),
                    dict(
                        max_tokens=256,
                        num_sample_negative=85,
                        tokenizer_name='bert-base-uncased',
                        type='RandomSamplingNegPos'),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'flip',
                            'flip_direction',
                            'text',
                            'custom_entities',
                            'tokens_positive',
                            'dataset_mode',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                type='ODVGDataset'),
        ],
        type='ConcatDataset'),
    num_workers=0,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        transforms=[
            [
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    type='RandomChoiceResize'),
            ],
            [
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            400,
                            4200,
                        ),
                        (
                            500,
                            4200,
                        ),
                        (
                            600,
                            4200,
                        ),
                    ],
                    type='RandomChoiceResize'),
                dict(
                    allow_negative_crop=True,
                    crop_size=(
                        384,
                        600,
                    ),
                    crop_type='absolute_range',
                    type='RandomCrop'),
                dict(
                    keep_ratio=True,
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    type='RandomChoiceResize'),
            ],
        ],
        type='RandomChoice'),
    dict(min_gt_bbox_wh=(
        0.01,
        0.01,
    ), type='FilterAnnotations'),
    dict(
        max_tokens=256,
        num_sample_negative=85,
        tokenizer_name='bert-base-uncased',
        type='RandomSamplingNegPos'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'flip',
            'flip_direction',
            'text',
            'custom_entities',
            'tokens_positive',
            'dataset_mode',
        ),
        type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        datasets=[
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/AerialMaritimeDrone/large/',
                metainfo=dict(
                    classes=(
                        'boat',
                        'car',
                        'dock',
                        'jetski',
                        'lift',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=None,
                data_prefix=dict(img='valid/'),
                data_root=
                'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/',
                metainfo=dict(
                    classes=(
                        'fish',
                        'jellyfish',
                        'penguin',
                        'puffin',
                        'shark',
                        'starfish',
                        'stingray',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict({'Cottontail-Rabbit':
                                     dict(name='rabbit')}),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/CottontailRabbits/',
                metainfo=dict(classes=('Cottontail-Rabbit', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(hand=dict(suffix=' of a person')),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/EgoHands/generic/',
                metainfo=dict(classes=('hand', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(
                    CoW=dict(name='flat mushroom'),
                    chanterelle=dict(name='yellow mushroom')),
                data_prefix=dict(img='valid/'),
                data_root=
                'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/',
                metainfo=dict(classes=(
                    'CoW',
                    'chanterelle',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                caption_prompt=dict(
                    package=dict(prefix='there is a ',
                                 suffix=' on the porch')),
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/Packages/Raw/',
                metainfo=dict(classes=('package', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/PascalVOC/',
                metainfo=dict(
                    classes=(
                        'aeroplane',
                        'bicycle',
                        'bird',
                        'boat',
                        'bottle',
                        'bus',
                        'car',
                        'cat',
                        'chair',
                        'cow',
                        'diningtable',
                        'dog',
                        'horse',
                        'motorbike',
                        'person',
                        'pottedplant',
                        'sheep',
                        'sofa',
                        'train',
                        'tvmonitor',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='val_annotations_without_background.json',
                data_prefix=dict(img=''),
                data_root='data/odinw/pistols/export/',
                metainfo=dict(classes=('pistol', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/pothole/',
                metainfo=dict(classes=('pothole', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/Raccoon/Raccoon.v2-raw.coco/',
                metainfo=dict(classes=('raccoon', )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/ShellfishOpenImages/raw/',
                metainfo=dict(classes=(
                    'Crab',
                    'Lobster',
                    'Shrimp',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/thermalDogsAndPeople/',
                metainfo=dict(classes=(
                    'dog',
                    'person',
                )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
            dict(
                ann_file='valid/annotations_without_background.json',
                data_prefix=dict(img='valid/'),
                data_root='data/odinw/VehiclesOpenImages/416x416/',
                metainfo=dict(
                    classes=(
                        'Ambulance',
                        'Bus',
                        'Car',
                        'Motorcycle',
                        'Truck',
                    )),
                pipeline=[
                    dict(
                        backend_args=None,
                        imdecode_backend='pillow',
                        type='LoadImageFromFile'),
                    dict(
                        backend='pillow',
                        keep_ratio=True,
                        scale=(
                            800,
                            1333,
                        ),
                        type='FixScaleResize'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        meta_keys=(
                            'img_id',
                            'img_path',
                            'ori_shape',
                            'img_shape',
                            'scale_factor',
                            'text',
                            'custom_entities',
                            'caption_prompt',
                        ),
                        type='PackDetInputs'),
                ],
                return_classes=True,
                test_mode=True,
                type='CocoDataset'),
        ],
        type='ConcatDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    dataset_prefixes=[
        'AerialMaritimeDrone',
        'Aquarium',
        'CottontailRabbits',
        'EgoHands',
        'NorthAmericaMushrooms',
        'Packages',
        'PascalVOC',
        'pistols',
        'pothole',
        'Raccoon',
        'ShellfishOpenImages',
        'thermalDogsAndPeople',
        'VehiclesOpenImages',
    ],
    metrics=[
        dict(
            ann_file=
            'data/odinw/AerialMaritimeDrone/large/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/CottontailRabbits/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/EgoHands/generic/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Packages/Raw/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/PascalVOC/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/pistols/export/val_annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/pothole/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/Raccoon/Raccoon.v2-raw.coco/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/ShellfishOpenImages/raw/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/thermalDogsAndPeople/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
        dict(
            ann_file=
            'data/odinw/VehiclesOpenImages/416x416/valid/annotations_without_background.json',
            metric='bbox',
            type='CocoMetric'),
    ],
    type='MultiDatasetsEvaluator')
val_evaluator_AerialMaritimeDrone = dict(
    ann_file=
    'data/odinw/AerialMaritimeDrone/large/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_Aquarium = dict(
    ann_file=
    'data/odinw/Aquarium/Aquarium Combined.v2-raw-1024.coco/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_CottontailRabbits = dict(
    ann_file=
    'data/odinw/CottontailRabbits/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_EgoHands = dict(
    ann_file=
    'data/odinw/EgoHands/generic/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_NorthAmericaMushrooms = dict(
    ann_file=
    'data/odinw/NorthAmericaMushrooms/North American Mushrooms.v1-416x416.coco/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_Packages = dict(
    ann_file=
    'data/odinw/Packages/Raw/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_PascalVOC = dict(
    ann_file='data/odinw/PascalVOC/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_Raccoon = dict(
    ann_file=
    'data/odinw/Raccoon/Raccoon.v2-raw.coco/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_ShellfishOpenImages = dict(
    ann_file=
    'data/odinw/ShellfishOpenImages/raw/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_VehiclesOpenImages = dict(
    ann_file=
    'data/odinw/VehiclesOpenImages/416x416/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_pistols = dict(
    ann_file=
    'data/odinw/pistols/export/val_annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_pothole = dict(
    ann_file='data/odinw/pothole/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
val_evaluator_thermalDogsAndPeople = dict(
    ann_file=
    'data/odinw/thermalDogsAndPeople/valid/annotations_without_background.json',
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '/input_oe_data/jieyuz/weikaih/code/mmdetection/eval_results/ovd_50k_category_joint_finetune_4_7_freeze_vision_v3_eval/grounding_dino_swin-t_pretrain_odinw13'
